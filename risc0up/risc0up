#!/bin/bash

RISCZERO_VERSION=""
RISCZERO_SOURCE_PATH=""
VERBOSE_MODE=0

print_banner() {
  printf '
ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo
   __   ____ __  ___    ___
  | _ \/_ _/ __|/ __|  /   \            A general purpose
  |   / | |\__ \ (__  | (/) |             zero-knowledge
  |_|\_\___|___/\___|  \___/            virtual - machine

ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo

Contribute      : https://github.com/risc0/
Documentation   : https://dev.risczero.com/
Chat & Support  : https://discord.com/invite/risczero/

'
}

usage() {
    echo "Usage: $0 [options]"
    echo "Options:"
    echo "    -v, --version VERSION       Specify the cargo-risczero version to install (e.g., risc0-v2023-08-10.1)"
    echo "    -p, --path SOURCE_PATH      Install cargo-risczero from a local source directory"
    echo "    --verbose                   Enable verbose output"
    echo "    -h, --help                  Display this help message and exit"
}

spinner() {
    local pid=$1
    local delay=0.1
    local spinstr='|/-\'
    while kill -0 $pid 2>/dev/null; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        local spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}

execute_with_feedback() {
    if [ "$VERBOSE_MODE" -eq 1 ]; then
        eval $1
    else
        eval "$1" > /dev/null 2>&1 &
        pid=$!
        spinner $pid
        wait $pid
        status=$?
        if [ $status -ne 0 ]; then
            echo "Error executing command: $1"
            exit $status
        fi
        echo "$2 - Done"
    fi
}

parse_args() {
    while [[ "$#" -gt 0 ]]; do
        case $1 in
            -v|--version) RISCZERO_VERSION="$2"; shift ;;
            -p|--path) RISCZERO_SOURCE_PATH="$2"; shift ;;
            --verbose) VERBOSE_MODE=1 ;;
            -h|--help) usage; exit 0 ;;
            *) echo "Unknown option: $1" >&2; usage; exit 1 ;;
        esac
        shift
    done
}

install_rust() {
    if ! command -v cargo &> /dev/null; then
        execute_with_feedback "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh" "Installing Rust"
        source $HOME/.cargo/env
    else
        [ "$VERBOSE_MODE" -eq 1 ] && echo "Rust is already installed."
    fi
}

install_cargo_binstall() {
    execute_with_feedback "cargo install cargo-binstall --quiet" "Installing cargo-binstall"
}

install_cargo_risczero() {
    if [[ -n $RISCZERO_SOURCE_PATH ]]; then
        execute_with_feedback "cargo install --path \"$RISCZERO_SOURCE_PATH\"" "Installing cargo-risczero from local source"
    elif [[ -n $RISCZERO_VERSION ]]; then
        execute_with_feedback "cargo risczero install \"$RISCZERO_VERSION\"" "Installing specified version of cargo-risczero"
    else
        execute_with_feedback "cargo risczero install" "Installing the latest version of cargo-risczero"
    fi
}

install_risczero() {
    if ! command -v risczero &> /dev/null; then
        execute_with_feedback "cargo risczero install" "Installing the riscv32im-risc0-zkvm-elf toolchain"
    else
        [ "$VERBOSE_MODE" -eq 1 ] && echo "cargo-risczero is already installed."
    fi

}


main() {
    print_banner
    parse_args "$@"
    install_rust
    install_cargo_binstall
    install_cargo_risczero
    install_risczero
    echo "Installation complete. Run cargo risczero --help to get started."
}

main "$@"
